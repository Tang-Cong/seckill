<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="  
   		 http://www.springframework.org/schema/beans  
   		 http://www.springframework.org/schema/beans/spring-beans.xsd    
   	     http://www.springframework.org/schema/context  
      	 http://www.springframework.org/schema/context/spring-context.xsd  
         http://www.springframework.org/schema/mvc   
         http://www.springframework.org/schema/mvc/spring-mvc.xsd">  
  		
  	<!-- 配置整合mybatis过程 -->
  	<!-- 约定大于配置 -->
  	<!-- 配置数据库相关的参数 -->
  	<context:property-placeholder location="classpath:jdbc.properties"/>
  	
  	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${password}"></property>
		
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 连接关闭后不自动Commit -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000"/>
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>      
	</bean>
  	
  	<!-- 配置SqlSessionFactory对象 -->
  	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<!-- 注入数据库连接池 -->
  		<property name="dataSource" ref="dataSource"/>
  		<!-- classpath为 java ,resource下的目录 -->
  		<property name="configLocation" value="classpath:mybatis-config.xml"/>
  		<!-- 扫描eneity包 使用别名 -->
  		<property name="typeAliasesPackage" value="org.seckill.entity"/>
   		<!-- 扫描sql配置文件:mapper需要的Xml文件 -->
  		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
  	</bean>
  	
  	<!-- 配置扫描Dao接口包，动态实现Dao接口,注入到spring容器中 -->
  	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<!-- 注入SqlSessionFactory -->
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  		<!-- 给出需要扫描Dao接口包 -->
  		<property name="basePackage" value="org.seckill.dao"/>	
  	</bean>
  	
  		<!-- RedisDao -->
  	<bean id="redisDao" class="org.seckill.dao.RedisDao">
  		<constructor-arg index="0" value="localhost"/>
  		<constructor-arg index="1" value="6379"/>
  	</bean>
 </beans> 